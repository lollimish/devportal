title Assign VTN WebRTC app->WebRTC app: Initialize app

note over "Developer Hosted Server",APIGW: Developer has provisioned App and VTN callbackURL is defined and a WebRTC app is initialized"

WebRTC app->Developer Server: GET app JS and code is activated to get Access Token, token(appKey,secret,scope,client_credentials)

Developer Server->APIGW: POST /oauth/v3/token (appKey,secret,grant_type=client_credentials,scope=WEBRTC)

APIGW->Developer Server: 200 Ok (access_token,refresh_token,expires_in)

note over "WebRTC app","Developer Server","APIGW": Based on app initialization logic, the access token is username based or it requires a VTN. In VTN needed case, Dev Server uses PUT to assignVTN else, Dev Server returns JS + token tied to username for the noTN case.

alt VTN case Developer Server->APIGW: PUT assignVTN (token (assignedVTN, callbackURL))

APIGW->Developer Server: 202 Accepted (assignedVTN) end

Developer Server->WebRTC app: 302 Redirect to WebRTC app JS + token embedded.

WebRTC app->Developer Server: GET app JS 

Developer Server->WebRTC app: 200 Ok with body containing HTML having WebRTC app JS and token embedded.

WebRTC app->APIGW: POST Create session for WebRTC app (username, services)

APIGW->Call Mgmt Enabler: Create session for WebRTC app (username, services)

note over "APIGW","Call Mgmt Enabler","Developer Server": The enabler validates the access token before continuing with the Create Session processing.

alt VTN case "Call Mgmt Enabler"->APIGW: POST to VTNcallbackURL (assignedVTN, expires) APIGW->"Call Mgmt Enabler": Ack

APIGW->"Developer Server": POST to VTNcallbackURL (assignedVTN, expires) end

"Call Mgmt Enabler"->APIGW: 201 Created (resourceURL, expires) "APIGW"->"WebRTC app": 201 Created (resourceURL, expires)

note over "WebRTC app","Developer Server","APIGW","Call Mgmt Enabler": The create Session was successful and the WebRTC app may now create an event channel an start handling call siganling events. 